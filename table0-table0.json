{ settings:
   { cache: { statuses: [Object] },
     cors: false,
     files: { relativeTo: '.' },
     json: { replacer: null, space: null, suffix: null },
     payload: null,
     response: { emptyStatusCode: 200, options: {} },
     security: null,
     state: { parse: true, failAction: 'error' },
     timeout: { socket: undefined, server: false },
     validate:
      { options: {},
        query: [Object],
        payload: null,
        headers: null,
        params: null },
     ext: {},
     tags: [ 'one', 'two', 'three' ],
     description: 'Tests a checkout with items',
     notes: [ 'tests get request' ],
     handler: [Function: handler],
     vhost: undefined,
     plugins: {},
     app: {},
     auth: undefined },
  connection:
   EventEmitter {
     domain: null,
     _events:
      { route: [Function],
        domain: [Function],
        _events: [Function],
        _eventsCount: [Function],
        _maxListeners: [Function] },
     _eventsCount: 5,
     _maxListeners: undefined,
     settings:
      { compression: true,
        router: [Object],
        routes: [Object],
        host: 'localhost',
        port: 3000,
        labels: [],
        autoListen: true },
     server:
      EventEmitter {
        _settings: [Object],
        _caches: [Object],
        _handlers: [Object],
        _methods: [Object],
        _events: [Object],
        _dependencies: [],
        _registrations: [Object],
        _heavy: [Object],
        _mime: [Object],
        _replier: [Object],
        _requestor: [Object],
        _decorations: [Object],
        _plugins: [Object],
        _app: {},
        _registring: false,
        _state: 'stopped',
        _extensionsSeq: 0,
        _extensions: [Object],
        domain: null,
        _maxListeners: undefined,
        _sources: [Object],
        _parent: null,
        root: [Circular],
        app: {},
        connections: [Object],
        load: [Object],
        methods: {},
        mime: [Object],
        plugins: [Object],
        settings: [Object],
        version: '12.1.0',
        realm: [Object],
        auth: [Object],
        info: [Object],
        listener: [Object],
        registrations: [Object],
        views: [Function],
        render: [Function] },
     type: 'tcp',
     _started: false,
     _connections: {},
     _onConnection: null,
     registrations: { 'hapi-ending': [Object], vision: [Object], inert: [Object] },
     _extensions:
      { onRequest: [Object],
        onPreAuth: [Object],
        onPostAuth: [Object],
        onPreHandler: [Object],
        onPostHandler: [Object],
        onPreResponse: [Object] },
     _requestCounter: { value: 10000, min: 10000, max: 99999 },
     _load: { _process: [Object], settings: [Object] },
     states: { settings: [Object], cookies: {}, names: [] },
     auth:
      { connection: [Circular],
        _schemes: {},
        _strategies: {},
        settings: [Object],
        api: {} },
     _router:
      { settings: [Object],
        routes: [Object],
        ids: {},
        vhosts: null,
        specials: [Object] },
     plugins: {},
     app: {},
     listener:
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 0,
        _handle: null,
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0 },
     info:
      { created: 1457527646720,
        started: 0,
        host: 'localhost',
        port: 3000,
        protocol: 'http',
        id: 'yclept:8009:ilkubtvk',
        uri: 'http://localhost:3000' } },
  server:
   EventEmitter {
     _settings:
      { debug: [Object],
        load: [Object],
        mime: null,
        useDomains: true,
        connections: [Object] },
     _caches: { _default: [Object] },
     _handlers:
      { domain: [Function],
        _events: [Function],
        _eventsCount: [Function],
        _maxListeners: [Function],
        view: [Function],
        file: [Function],
        directory: [Function] },
     _methods: { server: [Circular], methods: {}, _normalized: {} },
     _events:
      EventEmitter {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined },
     _dependencies: [],
     _registrations: { vision: [Object], inert: [Object] },
     _heavy:
      { settings: [Object],
        _eventLoopTimer: null,
        _loadBench: [Object],
        load: [Object] },
     _mime: { _byType: [Object], _byExtension: [Object] },
     _replier: { _decorations: [Object] },
     _requestor: { _decorations: [Object] },
     _decorations: { views: [Function], render: [Function] },
     _plugins: { inert: [Object] },
     _app: {},
     _registring: false,
     _state: 'stopped',
     _extensionsSeq: 0,
     _extensions:
      { onPreStart: [Object],
        onPostStart: [Object],
        onPreStop: [Object],
        onPostStop: [Object] },
     domain: null,
     _maxListeners: undefined,
     _sources: [ [Object], [Object] ],
     _parent: null,
     root: [Circular],
     app: {},
     connections: [ [Object] ],
     load: { eventLoopDelay: 0, heapUsed: 0, rss: 0 },
     methods: {},
     mime: { _byType: [Object], _byExtension: [Object] },
     plugins: { inert: [Object] },
     settings:
      { debug: [Object],
        load: [Object],
        mime: null,
        useDomains: true,
        connections: [Object] },
     version: '12.1.0',
     realm:
      { _extensions: [Object],
        modifiers: [Object],
        plugin: '',
        pluginOptions: {},
        plugins: {},
        settings: [Object] },
     auth:
      { default: [Function],
        scheme: [Function],
        strategy: [Function],
        test: [Function],
        api: {} },
     info:
      { created: 1457527646720,
        started: 0,
        host: 'localhost',
        port: 3000,
        protocol: 'http',
        id: 'yclept:8009:ilkubtvk',
        uri: 'http://localhost:3000' },
     listener:
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 0,
        _handle: null,
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0 },
     registrations: { 'hapi-ending': [Object], vision: [Object], inert: [Object] },
     views: [Function],
     render: [Function] },
  path: '/checkout',
  method: 'get',
  plugin:
   EventEmitter {
     _settings:
      { debug: [Object],
        load: [Object],
        mime: null,
        useDomains: true,
        connections: [Object] },
     _caches: { _default: [Object] },
     _handlers:
      { domain: [Function],
        _events: [Function],
        _eventsCount: [Function],
        _maxListeners: [Function],
        view: [Function],
        file: [Function],
        directory: [Function] },
     _methods: { server: [Circular], methods: {}, _normalized: {} },
     _events:
      EventEmitter {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined },
     _dependencies: [],
     _registrations: { vision: [Object], inert: [Object] },
     _heavy:
      { settings: [Object],
        _eventLoopTimer: null,
        _loadBench: [Object],
        load: [Object] },
     _mime: { _byType: [Object], _byExtension: [Object] },
     _replier: { _decorations: [Object] },
     _requestor: { _decorations: [Object] },
     _decorations: { views: [Function], render: [Function] },
     _plugins: { inert: [Object] },
     _app: {},
     _registring: false,
     _state: 'stopped',
     _extensionsSeq: 0,
     _extensions:
      { onPreStart: [Object],
        onPostStart: [Object],
        onPreStop: [Object],
        onPostStop: [Object] },
     domain: null,
     _maxListeners: undefined,
     _sources: [ [Object], [Object] ],
     _parent: null,
     root: [Circular],
     app: {},
     connections: [ [Object] ],
     load: { eventLoopDelay: 0, heapUsed: 0, rss: 0 },
     methods: {},
     mime: { _byType: [Object], _byExtension: [Object] },
     plugins: { inert: [Object] },
     settings:
      { debug: [Object],
        load: [Object],
        mime: null,
        useDomains: true,
        connections: [Object] },
     version: '12.1.0',
     realm:
      { _extensions: [Object],
        modifiers: [Object],
        plugin: '',
        pluginOptions: {},
        plugins: {},
        settings: [Object] },
     auth:
      { default: [Function],
        scheme: [Function],
        strategy: [Function],
        test: [Function],
        api: {} },
     info:
      { created: 1457527646720,
        started: 0,
        host: 'localhost',
        port: 3000,
        protocol: 'http',
        id: 'yclept:8009:ilkubtvk',
        uri: 'http://localhost:3000' },
     listener:
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 0,
        _handle: null,
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0 },
     registrations: { 'hapi-ending': [Object], vision: [Object], inert: [Object] },
     views: [Function],
     render: [Function] },
  _special: false,
  _analysis: { segments: [ [Object] ], fingerprint: '/checkout', params: [] },
  params: [],
  fingerprint: '/checkout',
  public:
   { method: 'get',
     path: '/checkout',
     vhost: undefined,
     realm:
      { _extensions: [Object],
        modifiers: [Object],
        plugin: '',
        pluginOptions: {},
        plugins: {},
        settings: [Object] },
     settings:
      { cache: [Object],
        cors: false,
        files: [Object],
        json: [Object],
        payload: null,
        response: [Object],
        security: null,
        state: [Object],
        timeout: [Object],
        validate: [Object],
        ext: {},
        tags: [Object],
        description: 'Tests a checkout with items',
        notes: [Object],
        handler: [Function: handler],
        vhost: undefined,
        plugins: {},
        app: {},
        auth: undefined },
     fingerprint: '/checkout' },
  _prerequisites: null,
  _extensions:
   { onPreResponse: { _topo: [Object], _server: [Object], _routes: [], nodes: null },
     onPreAuth: { _topo: [Object], _server: [Object], _routes: [], nodes: null },
     onPostAuth: { _topo: [Object], _server: [Object], _routes: [], nodes: null },
     onPreHandler: { _topo: [Object], _server: [Object], _routes: [], nodes: null },
     onPostHandler: { _topo: [Object], _server: [Object], _routes: [], nodes: null } },
  _cycle: [ [Function], [Function], [Function], [Function] ] }
